import { Component, OnInit } from '@angular/core';
import { FormControl, FormGroup, Validators } from '@angular/forms';
import { JoinService } from './service/join.service';
import { Router } from '@angular/router';

@Component({
    selector: 'app-auth-join',
    templateUrl: './auth-join.page.html',
    styleUrls: ['./auth-join.page.scss'],
})
export class AuthJoinPage implements OnInit {

    public isBtnActive =  true;
    public joinFormGroup: FormGroup;


    constructor(
        private joinSvc: JoinService,
        private router: Router,
    ) { }

    ngOnInit() {
        this.joinFormGroup = new FormGroup({
            name: new FormControl('', [Validators.required]),
            gender: new FormControl('M', [Validators.required]),
            sl: new FormControl('S', [Validators.required]),
            birth_ym: new FormControl('', [Validators.minLength(8), Validators.maxLength(8), Validators.required]),
            birth_time: new FormControl('', [Validators.required]),
            flat_moon: new FormControl(0, [Validators.required]),
            me: new FormControl(1, [Validators.required]),
        });
    }

    /**
     * 폼 시작하기 버튼 클릭 시
     */
    public submit() {
        if(this.joinFormGroup.invalid) {
            return alert('정확하게 입력해 주세요.');
        }
        console.log(this.joinFormGroup.get('birth_ym').value?.length);
        const formData = {...this.joinFormGroup.value};
        formData.birth_time = +formData.birth_time.replace(/\:/g, '');
        if (formData.sl === 'M') formData.flat_moon = 1;

        this.joinSvc.setProfile(formData).subscribe((res) => {
            if(!res.error) {
                this.router.navigate(['/', 'home']);
            }
        })
    }

}
