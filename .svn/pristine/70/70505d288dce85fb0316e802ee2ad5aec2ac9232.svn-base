import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from "@angular/common/http";
import { Injectable } from "@angular/core";
import { from, Observable, of } from "rxjs";
import { mergeMap, tap } from 'rxjs/operators';

// @Injectable()
// export class BearerTokenInterceptor implements HttpInterceptor {
//   constructor () { }
//   intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {
//     return from(Auth.currentSession()).pipe(
//       mergeMap(session => {
//         if (session && session.isValid) {
//           return of(req.clone({
//             headers: req.headers.set('Authorization', `Bearer ${session.getIdToken().getJwtToken()}`)
//           }))
//         } else {
//           return of(req);
//         }
//       }),
//       mergeMap((interceptedRequest) => next.handle(interceptedRequest)),
//     );
//   }
// }