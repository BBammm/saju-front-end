import { Component, ViewChild, OnInit, OnDestroy } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { IonSlides } from '@ionic/angular';
import * as moment from 'moment';
import { AuthService } from '../core/auth/auth.service';
import { Subscription } from 'rxjs';
import { Share } from '@capacitor/share';
import { HomeService } from './service/home.service';

@Component({
    selector: 'app-home',
    templateUrl: 'home.page.html',
    styleUrls: ['home.page.scss'],
})

export class HomePage implements OnInit, OnDestroy {
    @ViewChild('slider') slider: IonSlides;

    public currentDate: any;
    public currentDay: any;
    public slideOpts = {
        slidesPerView: 1.6, // slide item 갯수 소수점은 걸쳐짐
    };
    public profile: any;
    public userSubscription: Subscription;
    public mainUser: any;
    public mainZodiac: any;
    public mainViewData: any;
    public bannerFlag = 'today';

    public isUserPending = true;
    public isZodiacPending = true;
    public isMainUserPending = true;
    public isMainPending = true;

    constructor(
        private authSvc: AuthService,
        private homeSvc: HomeService
    ) {
    }

    ngOnInit() {
        this.getCurrentDay();
        this.userSubscription = this.authSvc.profile$.subscribe({
            next: (profileInfo) => {
                this.profile = profileInfo.profile;
                this.profile.birth_format = this.profile.birth_ym.replace(/(\d{4})(\d{2})(\d{2})/g, '$1.$2.$3');
                this.isUserPending = false;
            }
        });
        this.authSvc.profileSource.next();

        this.getMainUserData();
        this.getMainZordiacData();
        this.getMainTodayData();
    }
    ngOnDestroy() {
        if (this.userSubscription) this.userSubscription.unsubscribe();
    }

    public async share() {
        await Share.share({
            title: '공유 타이틀',
            url: 'http://localhost:8100/home'
        });
    }

    /**
     * 오늘의 운세
     */
    public getMainTodayData() {
        this.isMainPending = true;
        this.mainViewData = null;
        this.homeSvc.getMainToday().subscribe({
            next: (res: any) => {
                const data = res.data.replace(/(<([^>]+)>)/ig,"");
                this.mainViewData = data;
                this.isMainPending = false;
            }
        });
    }

    /**
     * 별자리 운세
     */
    public getMainStarData() {
        this.isMainPending = true;
        this.mainViewData = null;
        this.homeSvc.getMainStar().subscribe({
            next: (res: any) => {
                const data = res.data.replace(/(<([^>]+)>)/ig,"");
                this.mainViewData = {
                    title: res.name,
                    data: data
                };
                this.isMainPending = false;
            }
        });
    }

    /**
     * 혈액형 운세
     */
    public getMainBloodData(type = 'a') {
        this.isMainPending = true;
        this.mainViewData = null;
        this.homeSvc.getMainBlood(type).subscribe({
            next: (res: any) => {
                const data = res.data.replace(/(<([^>]+)>)/ig,"");
                const dataNormal = res.data_normal.replace(/(<([^>]+)>)/ig,"");
                this.mainViewData = {
                    data: data,
                    data_normal: dataNormal,
                };
                this.isMainPending = false;
            }
        });
    }

    /**
     * 행운의색 운세
     */
    public getMainColorData() {
        this.isMainPending = true;
        this.mainViewData = null;
        this.homeSvc.getMainColor().subscribe({
            next: (res: any) => {
                const data = res.data.replace(/(<([^>]+)>)/ig,"");
                this.mainViewData = {
                    data: data,
                    score: res.score,
                };
                this.isMainPending = false;
            }
        });
    }

    /**
     * 바이오리듬 운세 (추후개발)
     */
    public getMainBioData() {
        this.isMainPending = true;
        this.mainViewData = null;
        this.homeSvc.getMainBio().subscribe({
            next: (res: any) => {
                // const data = res.data.replace(/(<([^>]+)>)/ig,"");
                // this.mainViewData = {
                //     title: res.name,
                //     data: data
                // };
                this.isMainPending = false;
            }
        });
    }

    private getMainUserData() {
        this.homeSvc.getMainUserInfo().subscribe({
            next: (res: any) => {
                this.mainUser = res.manse;
                this.isMainUserPending = false;
            }
        });
    }

    /**
     * 띠 운세
     */
    private getMainZordiacData() {
        this.homeSvc.getMainZodiac().subscribe({
            next: (res: any) => {
                console.log(res);
                // const target = res.data.split('<font color=blue>');
                // const result = target[1].split('</font>')[0];
                // const data = target[1].split('</font>')[1].replace(/(<([^>]+)>)/ig,"");
                // console.log(data);
                // console.log(result);
                this.mainZodiac = res.data;
                this.isZodiacPending = false;
            }
        });
    }

    private getCurrentDay() {
        this.currentDate = moment().format('MM월 DD일')
        const day = moment().weekday();
        switch (day) {
            case 0:
                this.currentDay = '일요일';
                break;
            case 1:
                this.currentDay = '월요일';
                break;
            case 2:
                this.currentDay = '화요일';
                break;
            case 3:
                this.currentDay = '수요일';
                break;
            case 4:
                this.currentDay = '목요일';
                break;
            case 5:
                this.currentDay = '금요일';
                break;
            case 6:
                this.currentDay = '토요일';
                break;
        }
    }

}
