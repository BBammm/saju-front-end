import { Component, OnInit } from '@angular/core';
import { LoadingController, Platform } from '@ionic/angular';
import { ActivatedRoute, Router } from '@angular/router';
import { Browser } from '@capacitor/browser';
import { InAppBrowser } from '@awesome-cordova-plugins/in-app-browser/ngx';
import { SocialAuthService } from './service/social-auth.service';

declare const Kakao: any

@Component({
    selector: 'app-auth',
    templateUrl: './auth.page.html',
    styleUrls: ['./auth.page.scss'],
})
export class AuthPage implements OnInit {

    public CLIENT_ID = "aa7e499d760c86bf748f1bccbc62fb4c";
    // public REDIRECT_URL = "http://127.0.0.1:8100/auth";
    public REDIRECT_URL = "http://admin.saju.fxstar.co.kr/auth/social/kakao/login";
    public URL = `https://kauth.kakao.com/oauth/authorize?client_id=${this.CLIENT_ID}&redirect_uri=${this.REDIRECT_URL}&response_type=code`;

    public code: string = null;
    public data: any;

    public kakao_account: any;
    public kakao_user_sub: number;

    constructor(
        public loadingController: LoadingController,
        private route: ActivatedRoute,
        private router: Router,
        private iab: InAppBrowser,
        private platform: Platform,

        private socialSvc: SocialAuthService
    ) {

    }

    ngOnInit() {
    }

    /**
     * kakaoLogin
     */
    public async kakaoLogin() {

        /* javascript 로그인 */
        // Kakao.Auth.login({
        //     // redirectUri: this.REDIRECT_URL,
        //     scope: `birthday, account_email, age_range`,
        //     success: (async (res) => {
        //         console.log(res);
        //         await Kakao.API.request({
        //             url: '/v2/user/me',
        //             success: (res) => {
        //                 const kakao_account = res.kakao_account;
        //                 console.log(kakao_account);
        //             }
        //         })
        //         this.router.navigate(['/', 'join']);
        //     }),
        //     fail: (err) => {
        //         console.log('eer-r = ', err);
        //     }
        // })

        /* restapi 로그인 */
        // const openCapacitorSite = async () => {
        //     await Browser.open({ url: this.URL });
        // };
        // openCapacitorSite().then(() => {
        //     console.log('browser Open');
        //     Browser.addListener('browserPageLoaded', () => {
        //         console.log('browserPageLoaded');
        //         // Browser.close();
        //     });
        //     Browser.addListener('browserFinished', () => {
        //         console.log('browserFinished');
        //         // Browser.close();
        //     });
        // });

        function receive(obj) {
            this.data =  obj;
        };

        if (this.platform.is('android') || this.platform.is('ios')) {
            const browser = this.iab.create(this.URL);
            browser.on('loadstop').subscribe(async (event) => {
                await browser.executeScript({
                    code: `\
                        login(${receive});
                    `
                });
            });
        } else {
            Kakao.Auth.login({
                // redirectUri: this.REDIRECT_URL,
                scope: `birthday, account_email, age_range, profile_nickname`,
                success: (async (res) => {
                    console.log(res);
                    await Kakao.API.request({
                        url: '/v2/user/me',
                        success: (res) => {
                            console.log('res = ', res);
                            this.kakao_account = res.kakao_account;
                            this.kakao_user_sub = res.id;
                        }
                    });
                    this.socialSvc.kakaoWebLogin(this.kakao_user_sub, this.kakao_account).subscribe((res) => {
                        if(res.profile === null) {
                            this.router.navigate(['/', 'join']);
                        } else {
                            this.router.navigate(['/', 'home']);
                        }
                    });
                }),
                fail: (err) => {
                    console.log('error = ', err);
                }
            });
        }

        // sub -> providerd_id;
        // provider = kakao


    }

}
